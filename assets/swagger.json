{
  "openapi": "3.0.1",
  "info": {
    "title": "nookpost-backend",
    "version": "1.0"
  },
  "paths": {
    "/api/v1/authentication/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticates the user and returns an access token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationLoginRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationLoginResponseBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/authentication/changePassword": {
      "put": {
        "tags": [
          "Authentication"
        ],
        "summary": "Changes the password of a user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutChangePasswordRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/categories/{uuid}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Gets a category",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoryResponseBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Gets all categories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllCategoriesResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/posts/{uuid}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Gets a post",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPostResponseBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Posts"
        ],
        "summary": "Modifies a post",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutPostRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "Deletes a post",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/posts": {
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Creates a post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostPostResponseBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Gets a filtered set of posts",
        "description": "The list will be ordered by date of creation",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of the author that created the post",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryUuid",
            "in": "query",
            "description": "The uuid of the category the posts are in",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "textSearch",
            "in": "query",
            "description": "Text to search for in articles (body and title)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page the posts should be on (requires pageItemCount)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageItemCount",
            "in": "query",
            "description": "The number of posts per page (requires page)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPostFilteredResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/users/{username}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets a user",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersGetResponseBody"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets a user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersGetResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Modifies a user",
        "description": "Null values are ignored.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPutRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Deletes a user",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Creates a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersPostRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPostResponseBody"
                }
              }
            }
          },
          "409": {
            "description": "Conflict"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/user/me/settings": {
      "get": {
        "tags": [
          "Users Settings"
        ],
        "summary": "Gets the user's settings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSettingsData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Users Settings"
        ],
        "summary": "Updates the user's settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSettingsData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthenticationLoginRequestBody": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The name of the user to log in.",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "The users password",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The body of a login request."
      },
      "AuthenticationLoginResponseBody": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "The token that can be used for authentication.",
            "nullable": true
          },
          "expiryTimestamp": {
            "type": "integer",
            "description": "The time in seconds the token expires on.",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Represents a token object in the response to a Login request"
      },
      "GetAllCategoriesCategory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the category",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "description": "Icon of the category",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "description": "UUID of the category object",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllCategoriesResponseBody": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllCategoriesCategory"
            },
            "description": "The currently present categories",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The body of a Get request to category/all"
      },
      "GetCategoryResponseBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the category",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "description": "Icon of the category",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "description": "UUID of the category object",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetPostFilteredPost": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the post",
            "nullable": true
          },
          "body": {
            "type": "string",
            "description": "Body/content of the post",
            "nullable": true
          },
          "bannerImageBase64": {
            "type": "string",
            "description": "The banner image of the post",
            "nullable": true
          },
          "categoryUuid": {
            "type": "string",
            "description": "UUID of the category of the post",
            "nullable": true
          },
          "authorDisplayName": {
            "type": "string",
            "description": "The display name of the author",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "description": "The UUID of the post.",
            "nullable": true
          },
          "authorUsername": {
            "type": "string",
            "description": "The username of the author",
            "nullable": true
          },
          "modifiedOn": {
            "type": "integer",
            "description": "Timestamp for the last modification of the post",
            "format": "int64"
          },
          "createdOn": {
            "type": "integer",
            "description": "Timestamp for the creation of the post",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Response to a post get request"
      },
      "GetPostFilteredResponseBody": {
        "type": "object",
        "properties": {
          "posts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetPostFilteredPost"
            },
            "description": "The posts remaining after the filter operation",
            "nullable": true
          },
          "totalNumberOfPages": {
            "type": "integer",
            "description": "The total number of pages there are.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "The response to a get posts request with filter"
      },
      "GetPostResponseBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the post",
            "nullable": true
          },
          "body": {
            "type": "string",
            "description": "Body/content of the post",
            "nullable": true
          },
          "bannerImageBase64": {
            "type": "string",
            "description": "The banner image of the post",
            "nullable": true
          },
          "categoryUuid": {
            "type": "string",
            "description": "UUID of the category of the post",
            "nullable": true
          },
          "authorDisplayName": {
            "type": "string",
            "description": "The display name of the author",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "description": "The UUID of the post.",
            "nullable": true
          },
          "authorUsername": {
            "type": "string",
            "description": "The username of the author",
            "nullable": true
          },
          "modifiedOn": {
            "type": "integer",
            "description": "Timestamp for the last modification of the post",
            "format": "int64"
          },
          "createdOn": {
            "type": "integer",
            "description": "Timestamp for the creation of the post",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Response to a post get request"
      },
      "PostData": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the post",
            "nullable": true
          },
          "body": {
            "type": "string",
            "description": "Body/content of the post",
            "nullable": true
          },
          "bannerImageBase64": {
            "type": "string",
            "description": "The banner image of the post",
            "nullable": true
          },
          "categoryUuid": {
            "type": "string",
            "description": "UUID of the category of the post",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a post created by a user"
      },
      "PostPostResponseBody": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "The UUID of the created post.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The response to a post create message"
      },
      "PutChangePasswordRequestBody": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "description": "The old password of the user",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "description": "The new password of the user",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the request body of a change password request"
      },
      "PutPostRequestBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the post",
            "nullable": true
          },
          "body": {
            "type": "string",
            "description": "Body/content of the post",
            "nullable": true
          },
          "bannerImageBase64": {
            "type": "string",
            "description": "The banner image of the post",
            "nullable": true
          },
          "categoryUuid": {
            "type": "string",
            "description": "UUID of the category of the post",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response to a post get request"
      },
      "UserPutRequestBody": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The username of the user.",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "User display name",
            "nullable": true
          },
          "tagLine": {
            "type": "string",
            "description": "User Tagline/Status",
            "nullable": true
          },
          "bio": {
            "type": "string",
            "description": "User Bio",
            "nullable": true
          },
          "profilePictureBase64": {
            "type": "string",
            "description": "Profile picture of the user encoded as b64",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email of the user (null if user does not provide contact info)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request body of a user put request"
      },
      "UserSettingsData": {
        "type": "object",
        "properties": {
          "useDarkMode": {
            "type": "boolean",
            "description": "Whether to use dark mode for the user",
            "nullable": true
          },
          "displayEmailOnProfile": {
            "type": "boolean",
            "description": "Whether to display the user's email on the profile page"
          }
        },
        "additionalProperties": false,
        "description": "Represents user settings objects"
      },
      "UsersGetResponseBody": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The username of the user.",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "User display name",
            "nullable": true
          },
          "tagLine": {
            "type": "string",
            "description": "User Tagline/Status",
            "nullable": true
          },
          "bio": {
            "type": "string",
            "description": "User Bio",
            "nullable": true
          },
          "profilePictureBase64": {
            "type": "string",
            "description": "Profile picture of the user encoded as b64",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email of the user (null if user does not provide contact info)",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "description": "The UUID of the user",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The response to a user get request if successful"
      },
      "UsersPostRequestBody": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The username of the user.",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "User display name",
            "nullable": true
          },
          "tagLine": {
            "type": "string",
            "description": "User Tagline/Status",
            "nullable": true
          },
          "bio": {
            "type": "string",
            "description": "User Bio",
            "nullable": true
          },
          "profilePictureBase64": {
            "type": "string",
            "description": "Profile picture of the user encoded as b64",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email of the user (null if user does not provide contact info)",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "The users password",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The request body of a user create request"
      },
      "UsersPostResponseBody": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "The token that can be used for authentication.",
            "nullable": true
          },
          "expiryTimestamp": {
            "type": "integer",
            "description": "The time in seconds the token expires on.",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Represents a token object in the response to a user create request"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}